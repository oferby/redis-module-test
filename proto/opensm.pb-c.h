/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: opensm.proto */

#ifndef PROTOBUF_C_opensm_2eproto__INCLUDED
#define PROTOBUF_C_opensm_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Port Port;
typedef struct Node Node;
typedef struct StoreMessage StoreMessage;


/* --- enums --- */


/* --- messages --- */

struct  Port
{
  ProtobufCMessage base;
  uint64_t portguid;
  ProtobufCBinaryData portnum;
  uint64_t parentnodeguid;
  uint32_t healthy;
  uint64_t neighportguid;
  ProtobufCBinaryData neighportnum;
  uint64_t mkey;
  uint64_t subnetprefix;
  uint32_t baselid;
  uint32_t mastersmlid;
  ProtobufCBinaryData linkwidthenabled;
  ProtobufCBinaryData linkwidthsupported;
  ProtobufCBinaryData linkwidthactive;
  ProtobufCBinaryData linkspeedenabled;
  ProtobufCBinaryData linkspeedsupported;
  ProtobufCBinaryData linkspeedactive;
  ProtobufCBinaryData physstate;
  ProtobufCBinaryData logicalstate;
  ProtobufCBinaryData vlcap;
  ProtobufCBinaryData vlhighlimit;
  ProtobufCBinaryData vlarbhighcap;
  ProtobufCBinaryData vlarblowcap;
  ProtobufCBinaryData mtucap;
  uint32_t portfabricstate;
  ProtobufCBinaryData issmport;
};
#define PORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&port__descriptor) \
    , 0, {0,NULL}, 0, 0, 0, {0,NULL}, 0, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, {0,NULL} }


struct  Node
{
  ProtobufCMessage base;
  uint64_t nodeguid;
  size_t n_ports;
  Port **ports;
};
#define NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&node__descriptor) \
    , 0, 0,NULL }


struct  StoreMessage
{
  ProtobufCMessage base;
  uint64_t timestamp;
  size_t n_ports;
  Port **ports;
  size_t n_nodes;
  Node **nodes;
};
#define STORE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&store_message__descriptor) \
    , 0, 0,NULL, 0,NULL }


/* Port methods */
void   port__init
                     (Port         *message);
size_t port__get_packed_size
                     (const Port   *message);
size_t port__pack
                     (const Port   *message,
                      uint8_t             *out);
size_t port__pack_to_buffer
                     (const Port   *message,
                      ProtobufCBuffer     *buffer);
Port *
       port__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   port__free_unpacked
                     (Port *message,
                      ProtobufCAllocator *allocator);
/* Node methods */
void   node__init
                     (Node         *message);
size_t node__get_packed_size
                     (const Node   *message);
size_t node__pack
                     (const Node   *message,
                      uint8_t             *out);
size_t node__pack_to_buffer
                     (const Node   *message,
                      ProtobufCBuffer     *buffer);
Node *
       node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   node__free_unpacked
                     (Node *message,
                      ProtobufCAllocator *allocator);
/* StoreMessage methods */
void   store_message__init
                     (StoreMessage         *message);
size_t store_message__get_packed_size
                     (const StoreMessage   *message);
size_t store_message__pack
                     (const StoreMessage   *message,
                      uint8_t             *out);
size_t store_message__pack_to_buffer
                     (const StoreMessage   *message,
                      ProtobufCBuffer     *buffer);
StoreMessage *
       store_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   store_message__free_unpacked
                     (StoreMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Port_Closure)
                 (const Port *message,
                  void *closure_data);
typedef void (*Node_Closure)
                 (const Node *message,
                  void *closure_data);
typedef void (*StoreMessage_Closure)
                 (const StoreMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor port__descriptor;
extern const ProtobufCMessageDescriptor node__descriptor;
extern const ProtobufCMessageDescriptor store_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_opensm_2eproto__INCLUDED */
